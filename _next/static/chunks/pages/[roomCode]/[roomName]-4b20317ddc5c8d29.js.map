{"version":3,"file":"static/chunks/pages/[roomCode]/[roomName]-4b20317ddc5c8d29.js","mappings":"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","sources":["webpack://_N_E/?02d7","webpack://_N_E/./components/lib/button.tsx","webpack://_N_E/./components/lib/input.tsx","webpack://_N_E/./lib/rooms/room-encoding.ts","webpack://_N_E/./atoms/peers.ts","webpack://_N_E/./atoms/local.ts","webpack://_N_E/./lib/mesh/maps.ts","webpack://_N_E/./lib/mesh/stream.ts","webpack://_N_E/./lib/mesh/data.ts","webpack://_N_E/./lib/mesh/webrtc.ts","webpack://_N_E/./lib/mesh/websocket.ts","webpack://_N_E/./atoms/room.ts","webpack://_N_E/./components/room/label.tsx","webpack://_N_E/./components/lib/submit.tsx","webpack://_N_E/./components/room/pre-form.tsx","webpack://_N_E/./components/room/request-name.tsx","webpack://_N_E/./components/room/request-permission.tsx","webpack://_N_E/./components/lib/select.tsx","webpack://_N_E/./components/room/video.tsx","webpack://_N_E/./components/room/local-preview.tsx","webpack://_N_E/./components/room/request-devices.tsx","webpack://_N_E/./components/room/loading.tsx","webpack://_N_E/./components/room/controls.tsx","webpack://_N_E/./components/room/grid-video.tsx","webpack://_N_E/./components/room/local-video.tsx","webpack://_N_E/./components/room/peer-video.tsx","webpack://_N_E/./components/room/grid.tsx","webpack://_N_E/./components/room/call.tsx","webpack://_N_E/./pages/[roomCode]/[roomName].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/[roomCode]/[roomName]\",\n      function () {\n        return require(\"private-next-pages/[roomCode]/[roomName].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/[roomCode]/[roomName]\"])\n      });\n    }\n  ","import classNames from \"classnames\";\nimport React from \"react\";\n\ninterface Props extends React.HTMLAttributes<HTMLButtonElement> {\n  color?: \"indigo\" | \"slate\" | \"red\";\n  icon?: React.ReactElement;\n  fill?: boolean;\n  square?: boolean;\n  text?: string;\n}\n\nexport default function Button(props: Props) {\n  const {\n    color = \"indigo\",\n    icon,\n    fill = false,\n    square = false,\n    text,\n    ...rest\n  } = props;\n\n  const className = classNames(\n    `flex flex-row space-x-2 items-center justify-center rounded-md p-2 px-4 text-white focus:outline focus:outline-yellow-500 relative`,\n    {\n      \"w-full\": fill,\n      \"w-10 h-10\": square,\n      \"bg-indigo-500 hover:bg-indigo-600 active:bg-indigo-700\":\n        color === \"indigo\",\n      \"bg-slate-700 hover:bg-slate-600 active:bg-slate-500\": color === \"slate\",\n      \"bg-red-500 hover:bg-red-600 active:bg-red-700\": color === \"red\",\n    }\n  );\n\n  return (\n    <button type=\"button\" className={className} {...rest}>\n      {icon && icon}\n      <span>{text}</span>\n    </button>\n  );\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\ninterface Props extends React.InputHTMLAttributes<HTMLInputElement> {\n  borderless?: boolean;\n  handleChange: (value: string) => void;\n  id?: string;\n  placeholder?: string;\n  value: string;\n}\n\nexport default function Input(props: Props) {\n  const {\n    borderless = false,\n    handleChange,\n    id,\n    placeholder,\n    value,\n    ...rest\n  } = props;\n\n  const _handleChange = React.useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      handleChange(e.target.value);\n    },\n    [handleChange]\n  );\n\n  const className = classNames(\n    \"p-2 text-black rounded-md w-full border border-slate-300 focus:outline focus:outline-yellow-500\",\n    { \"border-none\": borderless }\n  );\n\n  return (\n    <input\n      className={className}\n      id={id}\n      onChange={_handleChange}\n      placeholder={placeholder}\n      type=\"text\"\n      value={value}\n      {...rest}\n    />\n  );\n}\n","// TODO - replace with something with more recent updates / support?\nimport shorthash from \"shorthash\";\n\nconst getRoomHash = (key: string, roomName: string): string => {\n  return shorthash.unique(`${key}${roomName}`);\n};\n\nexport const createRoomCode = (roomName: string): string => {\n  const key = (+new Date()).toString(36).slice(-5);\n  const hash = getRoomHash(key, roomName);\n  return key + hash;\n};\n\nexport const validateRoom = (roomCode: string, roomName: string): void => {\n  try {\n    const key = roomCode.substr(0, 5);\n    const hash = roomCode.substr(5);\n\n    const computedHash = getRoomHash(key, roomName);\n\n    if (hash !== computedHash) {\n      throw new Error(\"Bad room hash\");\n    }\n  } catch (e) {\n    console.error(e);\n    throw new Error(\"Invalid room code\");\n  }\n};\n\nexport const randomRoomName = (): string => {\n  return Math.random().toString(16).substr(2, 8);\n};\n","import { atom, SetterOrUpdater } from \"recoil\";\n\nexport type SetPeers = SetterOrUpdater<Peer[]>;\n\nexport type Peer = {\n  name?: string;\n  sid: string;\n  audioEnabled: boolean;\n  videoEnabled: boolean;\n} & (\n  | {\n      status: \"connecting\";\n    }\n  | {\n      status: \"connected\";\n    }\n);\n\nexport const defaultPeersState: Peer[] = [];\n\nexport const peersState = atom<Peer[]>({\n  key: \"peersState\",\n  default: defaultPeersState,\n});\n\nconst addPeer =\n  (sid: string) =>\n  (peers: Peer[]): Peer[] => {\n    return [\n      ...peers,\n      {\n        sid,\n        status: \"connecting\",\n        audioEnabled: false,\n        videoEnabled: false,\n      },\n    ];\n  };\n\nconst deletePeer =\n  (sid: string) =>\n  (peers: Peer[]): Peer[] => {\n    const peer = peers.find((peer) => peer.sid === sid);\n\n    if (peer === undefined) {\n      console.warn(\"Peer disconnected, but cannot be found in peers\");\n      return peers;\n    }\n\n    return peers.filter((peer) => peer.sid !== sid);\n  };\n\nconst setPeerConnected =\n  (sid: string) =>\n  (peers: Peer[]): Peer[] => {\n    console.debug(`peer fully connected ${sid}`);\n\n    return peers.map((peer): Peer => {\n      if (peer.sid !== sid) {\n        return peer;\n      }\n\n      return { ...peer, status: \"connected\" };\n    });\n  };\n\nconst setPeerState =\n  (sid: string, name: string, audioEnabled: boolean, videoEnabled: boolean) =>\n  (peers: Peer[]): Peer[] => {\n    return peers.map((peer): Peer => {\n      if (peer.sid !== sid) {\n        return peer;\n      }\n\n      return { ...peer, name, audioEnabled, videoEnabled };\n    });\n  };\n\nexport const peersActions = {\n  addPeer,\n  deletePeer,\n  setPeerConnected,\n  setPeerState,\n};\n","import assert from \"assert\";\nimport { atom, SetterOrUpdater } from \"recoil\";\n\nexport const LocalStreamKey = \"local\";\n\nexport type SetLocal = SetterOrUpdater<Local>;\n\nexport type Local =\n  | {\n      status: \"requestingName\";\n    }\n  | {\n      status: \"requestingPermissions\";\n      name: string;\n    }\n  | {\n      status: \"requestingDevices\";\n      name: string;\n    }\n  | {\n      status: \"connecting\";\n      name: string;\n      audioEnabled: boolean;\n      videoEnabled: boolean;\n    }\n  | {\n      status: \"connected\";\n      name: string;\n      audioEnabled: boolean;\n      videoEnabled: boolean;\n    };\n\nexport const defaultLocalState: Local = {\n  status: \"requestingName\",\n};\n\nexport const localState = atom<Local>({\n  key: \"localState\",\n  default: defaultLocalState,\n});\n\nconst setAudioVideoEnabled =\n  (audioEnabled: boolean, videoEnabled: boolean) =>\n  (local: Local): Local => {\n    assert(local.status === \"connecting\" || local.status === \"connected\");\n    return { ...local, audioEnabled, videoEnabled };\n  };\n\nconst setConnecting =\n  (audioEnabled: boolean, videoEnabled: boolean) =>\n  (local: Local): Local => {\n    assert(local.status === \"requestingDevices\");\n    return { ...local, status: \"connecting\", audioEnabled, videoEnabled };\n  };\n\nconst setRequestingDevices = (local: Local): Local => {\n  assert(local.status === \"requestingPermissions\");\n  return { ...local, status: \"requestingDevices\" };\n};\n\nconst setRequestingPermissions =\n  (name: string) =>\n  (local: Local): Local => {\n    assert(local.status === \"requestingName\");\n    localStorage.setItem(\"name\", name);\n    return { ...local, name, status: \"requestingPermissions\" };\n  };\n\nconst setSocket = (local: Local): Local => {\n  assert(local.status === \"connecting\" || local.status === \"connected\");\n  return { ...local, status: \"connected\" };\n};\n\nexport const localActions = {\n  setAudioVideoEnabled,\n  setConnecting,\n  setRequestingDevices,\n  setRequestingPermissions,\n  setSocket,\n};\n","export const rtcPeerConnectionMap = new Map<string, RTCPeerConnection>();\nexport const rtcDataChannelMap = new Map<string, RTCDataChannel>();\nexport const streamMap = new Map<string, MediaStream | null>();\n\nexport const mapGet = <K, V>(map: Map<K, V>, key: K): V => {\n  const v = map.get(key);\n\n  if (v === undefined) {\n    throw new Error(\"Failed to find key in map\");\n  }\n\n  return v;\n};\n","export interface Device {\n  id: string;\n  name: string;\n}\n\nexport interface Devices {\n  audio: Device[];\n  selectedAudio: Device | null;\n  video: Device[];\n  selectedVideo: Device | null;\n}\n\nexport const stopStream = (stream: MediaStream | null) => {\n  if (stream === null) {\n    return;\n  }\n\n  stream.getTracks().forEach((track) => {\n    track.stop();\n  });\n};\n\nconst getMediaStream = async (\n  constraints: MediaStreamConstraints\n): Promise<MediaStream> => {\n  return navigator.mediaDevices.getUserMedia(constraints);\n};\n\nexport const getDevices = async (): Promise<Devices> => {\n  const devices: Devices = {\n    audio: [],\n    selectedAudio: null,\n    video: [],\n    selectedVideo: null,\n  };\n\n  (await navigator.mediaDevices.enumerateDevices()).forEach((mediaDevice) => {\n    // We can't see what the device is. This happens when you enumerate devices\n    // without permission having being granted to access that type of device.\n    if (mediaDevice.label === \"\") {\n      return;\n    }\n\n    const device: Device = {\n      id: mediaDevice.deviceId,\n      name: mediaDevice.label,\n    };\n\n    if (mediaDevice.kind.toLowerCase().includes(\"audio\")) {\n      devices.audio.push(device);\n\n      if (devices.selectedAudio === null) {\n        devices.selectedAudio = device;\n      }\n    }\n\n    if (mediaDevice.kind.toLowerCase().includes(\"video\")) {\n      devices.video.push(device);\n\n      if (devices.selectedVideo === null) {\n        devices.selectedVideo = device;\n      }\n    }\n  });\n\n  return devices;\n};\n\nexport const createLocalStream = async ({\n  audioDeviceId,\n  videoDeviceId,\n}: {\n  audioDeviceId?: string;\n  videoDeviceId?: string;\n} = {}): Promise<MediaStream | null> => {\n  // const video = {\n  //   facingMode: \"user\",\n  //   // width: { min: 640, ideal: 1280, max: 1920 },\n  //   // height: { min: 360, ideal: 720, max: 1080 },\n  //   // frameRate: { ideal: 15, max: 24 },\n  // };\n  // const audio = {\n  //   autoGainControl: true,\n  //   sampleRate: { ideal: 48000, min: 35000 },\n  //   echoCancellation: true,\n  //   channelCount: { ideal: 1 },\n  // };\n\n  const audio =\n    audioDeviceId !== undefined ? { deviceId: audioDeviceId } : true;\n  const video =\n    videoDeviceId !== undefined ? { deviceId: videoDeviceId } : true;\n\n  try {\n    // Try and get video and audio\n    return await getMediaStream({ video, audio });\n  } catch (err) {\n    console.error(err);\n    try {\n      // Try just audio\n      return await getMediaStream({ audio });\n    } catch (err) {\n      console.error(err);\n      try {\n        // Try just video\n        return await getMediaStream({ video });\n      } catch (err) {\n        console.error(err);\n        // No stream\n        return null;\n      }\n    }\n  }\n};\n\nexport const getVideoAudioEnabled = (\n  stream: MediaStream | null\n): { audioEnabled: boolean; videoEnabled: boolean } => {\n  if (stream === null) {\n    return { audioEnabled: false, videoEnabled: false };\n  }\n\n  const videoTracks = stream.getVideoTracks();\n  const audioTracks = stream.getAudioTracks();\n\n  const videoEnabled =\n    videoTracks !== undefined &&\n    videoTracks.length > 0 &&\n    videoTracks[0].enabled;\n  const audioEnabled =\n    audioTracks !== undefined &&\n    audioTracks.length > 0 &&\n    audioTracks[0].enabled;\n\n  return { audioEnabled, videoEnabled };\n};\n","import assert from \"assert\";\nimport { Local, LocalStreamKey } from \"../../atoms/local\";\nimport { peersActions, SetPeers } from \"../../atoms/peers\";\nimport { mapGet, rtcDataChannelMap, streamMap } from \"./maps\";\nimport { getVideoAudioEnabled } from \"./stream\";\n\ninterface MessagePeerState {\n  type: \"peer-state\";\n  name: string;\n  audioEnabled: boolean;\n  videoEnabled: boolean;\n}\n\nexport type Message = MessagePeerState;\n\nconst onPeerState = (\n  sid: string,\n  message: MessagePeerState,\n  setPeers: SetPeers\n) => {\n  console.debug(\n    `received peer state sid=[${sid}] name=[${message.name}] audioEnabled=[${message.audioEnabled}] videoEnabled=[${message.videoEnabled}]`\n  );\n  setPeers(\n    peersActions.setPeerState(\n      sid,\n      message.name,\n      message.audioEnabled,\n      message.videoEnabled\n    )\n  );\n};\n\nexport const sendMessage = (channel: RTCDataChannel, message: Message) => {\n  channel.send(JSON.stringify(message));\n};\n\nexport const registerDataChannel = (\n  sid: string,\n  channel: RTCDataChannel,\n  local: Local,\n  setPeers: SetPeers\n): void => {\n  assert(\n    local.status !== \"requestingName\" &&\n      local.status !== \"requestingPermissions\"\n  );\n\n  channel.onopen = () => {\n    const stream = mapGet(streamMap, LocalStreamKey);\n    const { audioEnabled, videoEnabled } = getVideoAudioEnabled(stream);\n    sendMessage(channel, {\n      type: \"peer-state\",\n      name: local.name,\n      audioEnabled,\n      videoEnabled,\n    });\n  };\n\n  channel.onmessage = function (event) {\n    const message: Message = JSON.parse(event.data);\n\n    switch (message.type) {\n      case \"peer-state\": {\n        onPeerState(sid, message, setPeers);\n      }\n    }\n  };\n\n  rtcDataChannelMap.set(sid, channel);\n};\n","import assert from \"assert\";\nimport { Socket } from \"socket.io-client\";\nimport { ClientEvents, ServerEvents } from \"../../../lib/src/types/websockets\";\nimport { Local, LocalStreamKey } from \"../../atoms/local\";\nimport { peersActions, SetPeers } from \"../../atoms/peers\";\nimport { registerDataChannel } from \"./data\";\nimport { mapGet, streamMap } from \"./maps\";\n\nconst iceServers = {\n  iceServers: [\n    { urls: \"stun:stun1.l.google.com:19302\" },\n    { urls: \"stun:stun2.l.google.com:19302\" },\n  ],\n};\n\nexport const createRtcPeerConnection = (\n  socket: Socket<ServerEvents, ClientEvents>,\n  local: Local,\n  sid: string,\n  setPeers: SetPeers,\n  creator: boolean\n): RTCPeerConnection => {\n  assert(local.status === \"connecting\");\n\n  const rtcPeerConnection = new RTCPeerConnection(iceServers);\n  const stream = mapGet(streamMap, LocalStreamKey);\n\n  stream?.getTracks().forEach((track) => {\n    rtcPeerConnection.addTrack(track, stream);\n  });\n\n  rtcPeerConnection.ontrack = (e) => {\n    if (e.streams.length > 0) {\n      streamMap.set(sid, e.streams[0]);\n    }\n  };\n\n  rtcPeerConnection.onicecandidate = (e) => {\n    console.debug(\n      \"ice candidate\",\n      e.candidate?.candidate,\n      rtcPeerConnection.iceConnectionState\n    );\n    if (e.candidate !== null) {\n      socket.emit(\"webRtcIceCandidate\", {\n        sid,\n        label: e.candidate.sdpMLineIndex,\n        candidate: e.candidate.candidate,\n      });\n    }\n\n    if (\n      rtcPeerConnection.iceConnectionState === \"connected\" ||\n      rtcPeerConnection.iceConnectionState === \"completed\"\n    ) {\n      setPeers(peersActions.setPeerConnected(sid));\n    }\n  };\n\n  if (creator) {\n    const channel = rtcPeerConnection.createDataChannel(\"data\");\n    registerDataChannel(sid, channel, local, setPeers);\n  } else {\n    rtcPeerConnection.ondatachannel = (event) => {\n      registerDataChannel(sid, event.channel, local, setPeers);\n    };\n  }\n\n  return rtcPeerConnection;\n};\n","import { io, Socket as IOSocket } from \"socket.io-client\";\nimport {\n  ClientEvents,\n  ServerEvents,\n  WebRtcAnswer,\n  WebRtcIceCandidate,\n  WebRtcOffer,\n} from \"../../../lib/src/types/websockets\";\nimport { peersActions, SetPeers } from \"../../atoms/peers\";\nimport { Local, localActions, SetLocal } from \"../../atoms/local\";\nimport { createRtcPeerConnection } from \"./webrtc\";\nimport {\n  mapGet,\n  rtcDataChannelMap,\n  rtcPeerConnectionMap,\n  streamMap,\n} from \"./maps\";\nimport assert from \"assert\";\n\nexport type Socket = IOSocket<ServerEvents, ClientEvents>;\n\nconst onConnected =\n  (socket: Socket, roomCode: string, setLocal: SetLocal) => () => {\n    console.debug(`connected`);\n    socket.emit(\"joinRoom\", roomCode);\n    setLocal(localActions.setSocket);\n  };\n\nconst onPeerConnect =\n  (socket: Socket, local: Local, setPeers: SetPeers) => async (sid: string) => {\n    console.debug(`peerConnect sid=${sid}`);\n\n    if (rtcPeerConnectionMap.get(sid)) {\n      console.warn(\"Received connect from known peer\");\n      return;\n    }\n\n    const rtcPeerConnection = createRtcPeerConnection(\n      socket,\n      local,\n      sid,\n      setPeers,\n      true\n    );\n    rtcPeerConnectionMap.set(sid, rtcPeerConnection);\n    const offerSdp = await rtcPeerConnection.createOffer();\n    rtcPeerConnection.setLocalDescription(offerSdp);\n    setPeers(peersActions.addPeer(sid));\n\n    socket.emit(\"webRtcOffer\", { offerSdp, sid });\n  };\n\nconst onPeerDisconnect = (setPeers: SetPeers) => (sid: string) => {\n  console.debug(`peerDisconnect sid=${sid}`);\n\n  const rtcPeerConnection = rtcPeerConnectionMap.get(sid);\n  rtcPeerConnection?.close();\n  rtcPeerConnectionMap.delete(sid);\n\n  const rtcDataChannel = rtcDataChannelMap.get(sid);\n  rtcDataChannel?.close();\n  rtcDataChannelMap.delete(sid);\n\n  streamMap.delete(sid);\n\n  setPeers(peersActions.deletePeer(sid));\n};\n\nconst onWebRtcOffer =\n  (socket: Socket, local: Local, setPeers: SetPeers) =>\n  async ({ offerSdp, sid }: WebRtcOffer) => {\n    console.debug(`webRtcOffer fromSid=${socket.id} toSid=${sid}`);\n\n    const rtcPeerConnection = createRtcPeerConnection(\n      socket,\n      local,\n      sid,\n      setPeers,\n      false\n    );\n    rtcPeerConnectionMap.set(sid, rtcPeerConnection);\n    setPeers(peersActions.addPeer(sid));\n    rtcPeerConnection.setRemoteDescription(new RTCSessionDescription(offerSdp));\n    const answerSdp = await rtcPeerConnection.createAnswer();\n    rtcPeerConnection.setLocalDescription(answerSdp);\n\n    socket.emit(\"webRtcAnswer\", { answerSdp, sid });\n  };\n\nconst onWebRtcAnswer = (socket: Socket) => (webRtcAnswer: WebRtcAnswer) => {\n  console.debug(`webRtcAnswer fromSid=${socket.id} toSid=${webRtcAnswer.sid}`);\n  const rtcPeerConnection = mapGet(rtcPeerConnectionMap, webRtcAnswer.sid);\n  rtcPeerConnection.setRemoteDescription(\n    new RTCSessionDescription(webRtcAnswer.answerSdp)\n  );\n};\n\nconst onWebRtcIceCandidate =\n  (setPeers: SetPeers) => (webRtcIceCandidate: WebRtcIceCandidate) => {\n    const rtcPeerConnection = mapGet(\n      rtcPeerConnectionMap,\n      webRtcIceCandidate.sid\n    );\n    console.debug(\n      \"received ice candidate\",\n      webRtcIceCandidate.candidate,\n      rtcPeerConnection.iceConnectionState\n    );\n    rtcPeerConnection.addIceCandidate(\n      new RTCIceCandidate({\n        sdpMLineIndex: webRtcIceCandidate.label,\n        candidate: webRtcIceCandidate.candidate,\n      })\n    );\n\n    if (\n      rtcPeerConnection.iceConnectionState === \"connected\" ||\n      rtcPeerConnection.iceConnectionState === \"completed\"\n    ) {\n      setPeers(peersActions.setPeerConnected(webRtcIceCandidate.sid));\n    }\n  };\n\nexport const createSocket = async (\n  roomCode: string,\n  local: Local,\n  socketRef: React.MutableRefObject<Socket | undefined>,\n  setLocal: SetLocal,\n  setPeers: SetPeers\n): Promise<void> => {\n  assert(process.env.NEXT_PUBLIC_SIGNALLING_URL !== undefined);\n  const socket: Socket = io(process.env.NEXT_PUBLIC_SIGNALLING_URL);\n\n  socketRef.current = socket;\n\n  socket.on(\"connected\", onConnected(socket, roomCode, setLocal));\n  socket.on(\"peerConnect\", onPeerConnect(socket, local, setPeers));\n  socket.on(\"peerDisconnect\", onPeerDisconnect(setPeers));\n  socket.on(\"webRtcOffer\", onWebRtcOffer(socket, local, setPeers));\n  socket.on(\"webRtcAnswer\", onWebRtcAnswer(socket));\n  socket.on(\"webRtcIceCandidate\", onWebRtcIceCandidate(setPeers));\n};\n","import { atom, SetterOrUpdater } from \"recoil\";\n\nexport type SetRoom = SetterOrUpdater<Room>;\n\nexport type Room =\n  | {\n      status: \"loading\";\n    }\n  | {\n      status: \"error\";\n      error: string;\n    }\n  | {\n      status: \"ready\";\n      name: string;\n    };\n\nexport const defaultRoomState: Room = {\n  status: \"loading\",\n};\n\nexport const roomState = atom<Room>({\n  key: \"roomState\",\n  default: defaultRoomState,\n});\n\nconst setError = (): Room => {\n  return { status: \"error\", error: \"Invalid room\" };\n};\n\nconst setReady = (roomName: string) => (): Room => {\n  return { status: \"ready\", name: roomName };\n};\n\nexport const roomActions = {\n  setError,\n  setReady,\n};\n","import React from \"react\";\n\ninterface Props extends React.HTMLAttributes<HTMLButtonElement> {\n  htmlFor: string;\n  text: string;\n}\n\nexport default function Label(props: Props) {\n  const { htmlFor, text } = props;\n\n  return <label htmlFor={htmlFor}>{text}</label>;\n}\n","import classNames from \"classnames\";\nimport React from \"react\";\n\ninterface Props extends React.InputHTMLAttributes<HTMLInputElement> {\n  fill?: boolean;\n  text: string;\n}\n\nexport default function Submit(props: Props) {\n  const { fill = false, text, ...rest } = props;\n\n  const className = classNames(\n    \"flex flex-row space-x-2 items-center justify-center rounded-md p-2 px-4 text-white bg-indigo-500 hover:bg-indigo-600 active:bg-indigo-700 focus:outline focus:outline-yellow-500 cursor-pointer\",\n    {\n      \"w-full\": fill,\n    }\n  );\n\n  return (\n    <input type=\"submit\" className={className} {...rest} value={text}></input>\n  );\n}\n","import React from \"react\";\nimport Submit from \"../lib/submit\";\n\ninterface Props extends React.HTMLAttributes<HTMLButtonElement> {\n  body: React.ReactElement;\n  handleSubmit: () => void;\n  submitText: string;\n}\n\nexport default function PreForm(props: Props) {\n  const { body, handleSubmit, submitText } = props;\n\n  const _handleSubmit = React.useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      handleSubmit();\n    },\n    [handleSubmit]\n  );\n\n  return (\n    <form\n      className=\"flex w-full h-full items-center justify-center text-black\"\n      onSubmit={_handleSubmit}\n    >\n      <div className=\"flex flex-col w-80 rounded-lg bg-white\">\n        <div className=\"flex flex-col flex-grow p-4 space-y-2\">{body}</div>\n        <div className=\"p-4 border-t border-slate-300\">\n          <Submit text={submitText} fill />\n        </div>\n      </div>\n    </form>\n  );\n}\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { localActions, localState } from \"../../atoms/local\";\nimport Input from \"../lib/input\";\nimport Label from \"./label\";\nimport PreForm from \"./pre-form\";\n\nexport default function RequestName() {\n  const setLocal = useSetRecoilState(localState);\n  const [name, setName] = React.useState<string>(\n    localStorage.getItem(\"name\") ?? \"\"\n  );\n\n  const submitName = React.useCallback(() => {\n    setLocal(localActions.setRequestingPermissions(name));\n  }, [name, setLocal]);\n\n  return (\n    <PreForm\n      body={\n        <>\n          <Label htmlFor=\"name\" text=\"Your name\" />\n          <Input\n            handleChange={setName}\n            id=\"name\"\n            placeholder=\"Enter your name\"\n            required\n            value={name}\n          />\n        </>\n      }\n      handleSubmit={submitName}\n      submitText=\"Continue\"\n    />\n  );\n}\n","import React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { localActions, localState, LocalStreamKey } from \"../../atoms/local\";\nimport { streamMap } from \"../../lib/mesh/maps\";\nimport { createLocalStream } from \"../../lib/mesh/stream\";\nimport PreForm from \"./pre-form\";\n\nexport default function RequestPermission() {\n  const setLocal = useSetRecoilState(localState);\n\n  const requestPermissions = React.useCallback(async () => {\n    const stream = await createLocalStream();\n    streamMap.set(LocalStreamKey, stream);\n    setLocal(localActions.setRequestingDevices);\n  }, [setLocal]);\n\n  return (\n    <PreForm\n      body={\n        <>\n          <div>\n            To be able to share your camera and microphone, p2p.chat will\n            request access to these devices.\n          </div>\n          <div className=\"text-slate-500\">\n            You&apos;ll still be able to stop sharing your devices at any time.\n          </div>\n        </>\n      }\n      handleSubmit={requestPermissions}\n      submitText=\"Request permissions\"\n    />\n  );\n}\n","import { Listbox } from \"@headlessui/react\";\nimport { CheckIcon, SelectorIcon } from \"@heroicons/react/outline\";\nimport classNames from \"classnames\";\nimport Label from \"../room/label\";\n\ninterface Props extends React.HTMLAttributes<HTMLButtonElement> {\n  id: string;\n  fallback: string;\n  icon?: React.ReactElement;\n  label: string;\n  options: {\n    value: string;\n    text: string;\n  }[];\n  selectedOption:\n    | {\n        value: string;\n        text: string;\n      }\n    | undefined;\n  setValue: (value: string | undefined) => void;\n}\n\nexport default function Select(props: Props) {\n  const { id, fallback, icon, label, options, selectedOption, setValue } =\n    props;\n\n  const disabled = options.length === 0;\n\n  const buttonClassName = classNames(\n    \"relative flex flex-row items-center w-full px-8 py-2 text-left text-black border rounded-md border-slate-300 focus:outline focus:outline-yellow-500\",\n    {\n      \"text-slate-500\": disabled,\n    }\n  );\n\n  return (\n    <>\n      <Label htmlFor={id} text={label} />\n      <Listbox\n        value={selectedOption?.value}\n        onChange={setValue}\n        disabled={disabled}\n      >\n        <div className=\"relative mt-1\">\n          <Listbox.Button\n            id={id}\n            className={buttonClassName}\n            disabled={disabled}\n          >\n            <div className=\"absolute left-2\">{icon}</div>\n            <div className=\"flex-grow overflow-hidden text-ellipsis whitespace-nowrap\">\n              {selectedOption?.text ?? fallback}\n            </div>\n            <SelectorIcon className=\"absolute right-2\" width={20} height={20} />\n          </Listbox.Button>\n          <Listbox.Options className=\"absolute z-10 w-full py-1 mt-1 overflow-auto text-base bg-white shadow-lg max-h-60 border rounded-md border-slate-300 focus:outline-none sm:text-sm\">\n            {options.map((option) => (\n              <Listbox.Option key={option.value} value={option.value}>\n                {({ active, selected }) => {\n                  const optionClassName = classNames(\n                    \"relative pl-8 p-2 cursor-pointer\",\n                    {\n                      \"bg-slate-200\": active,\n                    }\n                  );\n\n                  return (\n                    <div className={optionClassName}>\n                      {selected && (\n                        <CheckIcon\n                          className=\"absolute left-2\"\n                          width={20}\n                          height={20}\n                        />\n                      )}\n                      <div className=\"overflow-hidden text-ellipsis whitespace-nowrap\">\n                        {option.text}\n                      </div>\n                    </div>\n                  );\n                }}\n              </Listbox.Option>\n            ))}\n          </Listbox.Options>\n        </div>\n      </Listbox>\n    </>\n  );\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\n\ninterface Props {\n  local?: boolean;\n  stream: MediaStream;\n  videoDisabled?: boolean;\n}\n\nexport default function Video(props: Props) {\n  const { local = false, stream, videoDisabled = false } = props;\n\n  const className = classNames(\"h-full w-full object-cover rounded-md\", {\n    \"scale-x-[-1]\": local,\n    hidden: videoDisabled,\n  });\n\n  return (\n    <video\n      ref={(video) => {\n        if (video === null) {\n          return;\n        }\n        video.srcObject = stream;\n      }}\n      tabIndex={-1}\n      autoPlay\n      muted={local}\n      className={className}\n    />\n  );\n}\n","import React from \"react\";\nimport { LocalStreamKey } from \"../../atoms/local\";\nimport { mapGet, streamMap } from \"../../lib/mesh/maps\";\nimport Video from \"./video\";\n\nexport default function LocalPreview() {\n  const stream = mapGet(streamMap, LocalStreamKey);\n\n  return (\n    <div className=\"w-full h-48 bg-slate-900 rounded-md\">\n      {stream !== null && <Video local stream={stream} />}\n    </div>\n  );\n}\n","import { MicrophoneIcon, VideoCameraIcon } from \"@heroicons/react/outline\";\nimport React from \"react\";\nimport { useSetRecoilState } from \"recoil\";\nimport { localActions, localState, LocalStreamKey } from \"../../atoms/local\";\nimport { mapGet, streamMap } from \"../../lib/mesh/maps\";\nimport {\n  createLocalStream,\n  Devices,\n  getDevices,\n  getVideoAudioEnabled,\n  stopStream,\n} from \"../../lib/mesh/stream\";\nimport Select from \"../lib/select\";\nimport LocalPreview from \"./local-preview\";\nimport PreForm from \"./pre-form\";\n\nexport default function RequestDevices() {\n  const setLocal = useSetRecoilState(localState);\n  const [devices, setDevices] = React.useState<Devices>();\n\n  React.useEffect(() => {\n    (async () => {\n      setDevices(await getDevices());\n    })();\n  }, []);\n\n  const joinRoom = React.useCallback(async () => {\n    const stream = mapGet(streamMap, LocalStreamKey);\n    const { audioEnabled, videoEnabled } = getVideoAudioEnabled(stream);\n    setLocal(localActions.setConnecting(audioEnabled, videoEnabled));\n  }, [setLocal]);\n\n  const handleDeviceChange = React.useCallback(\n    async (\n      deviceId: string | undefined,\n      cb: (devices: Devices) => Promise<MediaStream | null>\n    ) => {\n      if (devices === undefined || deviceId === undefined) {\n        return;\n      }\n\n      const stream = mapGet(streamMap, LocalStreamKey);\n      stopStream(stream);\n      streamMap.set(LocalStreamKey, await cb(devices));\n    },\n    [devices]\n  );\n\n  const handleAudioChange = React.useCallback(\n    (deviceId: string | undefined) => {\n      handleDeviceChange(deviceId, async (devices: Devices) => {\n        const selectedAudio =\n          devices.audio.find((device) => {\n            return device.id === deviceId;\n          }) ?? null;\n        const stream = await createLocalStream({\n          audioDeviceId: selectedAudio?.id,\n          videoDeviceId: devices.selectedVideo?.id,\n        });\n        setDevices({ ...devices, selectedAudio });\n        return stream;\n      });\n    },\n    [handleDeviceChange]\n  );\n\n  const handleVideoChange = React.useCallback(\n    (deviceId: string | undefined) => {\n      handleDeviceChange(deviceId, async (devices: Devices) => {\n        const selectedVideo =\n          devices.video.find((device) => {\n            return device.id === deviceId;\n          }) ?? null;\n        const stream = await createLocalStream({\n          videoDeviceId: selectedVideo?.id,\n          audioDeviceId: devices.selectedAudio?.id,\n        });\n        setDevices({ ...devices, selectedVideo });\n        return stream;\n      });\n    },\n    [handleDeviceChange]\n  );\n\n  return (\n    <PreForm\n      body={\n        <>\n          <LocalPreview />\n          <Select\n            id=\"audio-select\"\n            fallback=\"No microphones found\"\n            icon={<MicrophoneIcon width={20} />}\n            label=\"Microphone\"\n            selectedOption={\n              devices?.selectedAudio\n                ? {\n                    value: devices.selectedAudio.id,\n                    text: devices.selectedAudio.name,\n                  }\n                : undefined\n            }\n            options={\n              devices?.audio.map((device) => {\n                return {\n                  value: device.id,\n                  text: device.name,\n                };\n              }) ?? []\n            }\n            setValue={handleAudioChange}\n          />\n          <Select\n            id=\"video-select\"\n            fallback=\"No cameras found\"\n            icon={<VideoCameraIcon width={20} />}\n            label=\"Camera\"\n            selectedOption={\n              devices?.selectedVideo\n                ? {\n                    value: devices.selectedVideo.id,\n                    text: devices.selectedVideo.name,\n                  }\n                : undefined\n            }\n            options={\n              devices?.video.map((device) => {\n                return {\n                  value: device.id,\n                  text: device.name,\n                };\n              }) ?? []\n            }\n            setValue={handleVideoChange}\n          />\n        </>\n      }\n      handleSubmit={joinRoom}\n      submitText=\"Join room\"\n    />\n  );\n}\n","import React from \"react\";\nimport Loader from \"react-loader-spinner\";\n\nexport default function Loading() {\n  return (\n    <div className=\"w-full h-full flex items-center justify-center\">\n      <Loader type=\"Oval\" color=\"#EAB308\" height={60} width={60} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  MicrophoneIcon,\n  PhoneIcon,\n  VideoCameraIcon,\n} from \"@heroicons/react/outline\";\nimport Button from \"../lib/button\";\nimport { useRecoilState, useRecoilValue } from \"recoil\";\nimport { localActions, localState, LocalStreamKey } from \"../../atoms/local\";\nimport classNames from \"classnames\";\nimport assert from \"assert\";\nimport { useRouter } from \"next/router\";\nimport { getVideoAudioEnabled } from \"../../lib/mesh/stream\";\nimport { peersState } from \"../../atoms/peers\";\nimport { sendMessage } from \"../../lib/mesh/data\";\nimport { mapGet, rtcDataChannelMap, streamMap } from \"../../lib/mesh/maps\";\n\ninterface ControlProps {\n  children: React.ReactElement;\n  disabled?: boolean;\n  text: string;\n}\n\nfunction Control(props: ControlProps) {\n  const { children, disabled = false, text } = props;\n\n  const textClassName = classNames(\"text-sm font-bold\", {\n    \"text-red-500\": disabled,\n  });\n\n  return (\n    <div className=\"flex flex-col items-center space-y-2 relative\">\n      {children}\n      <div className={textClassName}>{text}</div>\n    </div>\n  );\n}\n\nexport default function Controls() {\n  const router = useRouter();\n  const [local, setLocal] = useRecoilState(localState);\n  const peers = useRecoilValue(peersState);\n  const stream = mapGet(streamMap, LocalStreamKey);\n\n  assert(local.status === \"connecting\" || local.status === \"connected\");\n\n  const { audioEnabled, videoEnabled } = getVideoAudioEnabled(stream);\n\n  const handleLeave = React.useCallback(() => {\n    router.push(\n      `/goodbye?left=${router.query.roomCode}/${router.query.roomName}`,\n      \"/goodbye\"\n    );\n  }, [router]);\n\n  const handleToggleAudio = React.useCallback(() => {\n    peers.forEach((peer) => {\n      const channel = rtcDataChannelMap.get(peer.sid);\n\n      if (channel !== undefined) {\n        sendMessage(channel, {\n          type: \"peer-state\",\n          name: local.name,\n          audioEnabled: !audioEnabled,\n          videoEnabled,\n        });\n      }\n    });\n\n    const audioTracks = stream?.getAudioTracks();\n\n    if (audioTracks !== undefined && audioTracks.length > 0) {\n      audioTracks[0].enabled = !audioEnabled;\n    }\n\n    setLocal(localActions.setAudioVideoEnabled(!audioEnabled, videoEnabled));\n  }, [audioEnabled, local.name, peers, setLocal, stream, videoEnabled]);\n\n  const handleToggleVideo = React.useCallback(() => {\n    peers.forEach((peer) => {\n      const channel = rtcDataChannelMap.get(peer.sid);\n\n      if (channel !== undefined) {\n        sendMessage(channel, {\n          type: \"peer-state\",\n          name: local.name,\n          audioEnabled,\n          videoEnabled: !videoEnabled,\n        });\n      }\n    });\n\n    const videoTracks = stream?.getVideoTracks();\n\n    if (videoTracks !== undefined && videoTracks.length > 0) {\n      videoTracks[0].enabled = !videoEnabled;\n    }\n\n    setLocal(localActions.setAudioVideoEnabled(audioEnabled, !videoEnabled));\n  }, [audioEnabled, local.name, peers, setLocal, stream, videoEnabled]);\n\n  const videoIconClassName = classNames(\"absolute\", {\n    \"text-slate-800\": !videoEnabled,\n  });\n  const audioIconClassName = classNames(\"absolute\", {\n    \"text-slate-800\": !audioEnabled,\n  });\n\n  return (\n    <div className=\"flex items-center justify-center m-2 sm:m-4 space-x-8\">\n      <Control disabled={!audioEnabled} text=\"Mic\">\n        <Button\n          color={audioEnabled ? \"slate\" : \"red\"}\n          icon={<MicrophoneIcon width={24} className={audioIconClassName} />}\n          onClick={handleToggleAudio}\n          square\n        />\n      </Control>\n      <Control disabled={!videoEnabled} text=\"Cam\">\n        <Button\n          color={videoEnabled ? \"slate\" : \"red\"}\n          icon={<VideoCameraIcon width={24} className={videoIconClassName} />}\n          onClick={handleToggleVideo}\n          square\n        />\n      </Control>\n      <Control text=\"Leave\">\n        <Button\n          color=\"slate\"\n          icon={<PhoneIcon width={24} className=\"absolute text-red-500\" />}\n          onClick={handleLeave}\n          square\n        />\n      </Control>\n    </div>\n  );\n}\n","import { MicrophoneIcon } from \"@heroicons/react/outline\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport Loading from \"./loading\";\nimport Video from \"./video\";\n\ninterface StatusProps {\n  audioDisabled: boolean;\n  name?: string;\n  videoDisabled: boolean;\n}\n\nfunction Status(props: StatusProps) {\n  const { audioDisabled, name, videoDisabled } = props;\n\n  const className = classNames(\n    \"absolute flex items-center space-x-2 bottom-2 left-2 text-shadow z-10 sm:text-lg leading-none sm:leading-none max-w-full\",\n    {\n      \"sm:bottom-4 sm:left-4\": !videoDisabled,\n    }\n  );\n\n  const audioIconClassName = classNames(\"absolute\", {\n    \"text-red-500\": audioDisabled,\n  });\n\n  return (\n    <div className={className}>\n      <MicrophoneIcon width={20} className={audioIconClassName} />\n      <span className=\"overflow-hidden text-ellipsis whitespace-nowrap pl-5 pr-4\">\n        {name}\n      </span>\n    </div>\n  );\n}\n\ninterface Props {\n  audioDisabled: boolean;\n  loading?: boolean;\n  local?: boolean;\n  name?: string;\n  stream?: MediaStream | null;\n  videoDisabled: boolean;\n}\n\nexport default function GridVideo(props: Props) {\n  const {\n    audioDisabled,\n    loading = false,\n    local = false,\n    name,\n    stream,\n    videoDisabled,\n  } = props;\n\n  const status = (\n    <Status\n      audioDisabled={audioDisabled}\n      name={name}\n      videoDisabled={videoDisabled}\n    />\n  );\n\n  return (\n    <div className=\"w-full h-full relative\">\n      {loading ? (\n        <div className=\"w-full h-full flex items-center justify-center\">\n          <Loading />\n        </div>\n      ) : (\n        <>\n          {!videoDisabled && status}\n          {stream && (\n            <Video\n              local={local}\n              videoDisabled={videoDisabled}\n              stream={stream}\n            />\n          )}\n          {videoDisabled && (\n            <div className=\"w-full h-full flex items-center justify-center\">\n              <div className=\"flex items-center justify-center w-40 h-40 bg-indigo-500 rounded-md relative\">\n                {status}\n              </div>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n","import assert from \"assert\";\nimport React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { localState, LocalStreamKey } from \"../../atoms/local\";\nimport { mapGet, streamMap } from \"../../lib/mesh/maps\";\nimport { getVideoAudioEnabled } from \"../../lib/mesh/stream\";\nimport GridVideo from \"./grid-video\";\n\nexport default function LocalVideo() {\n  const local = useRecoilValue(localState);\n\n  assert(local.status === \"connecting\" || local.status === \"connected\");\n  const stream = mapGet(streamMap, LocalStreamKey);\n  const { audioEnabled, videoEnabled } = getVideoAudioEnabled(stream);\n\n  return (\n    <GridVideo\n      audioDisabled={!audioEnabled}\n      local\n      name={`${local.name} (You)`}\n      stream={stream}\n      videoDisabled={!videoEnabled}\n    />\n  );\n}\n","import React from \"react\";\nimport { Peer } from \"../../atoms/peers\";\nimport { streamMap } from \"../../lib/mesh/maps\";\nimport GridVideo from \"./grid-video\";\n\ninterface Props {\n  peer: Peer;\n}\n\nexport default function PeerVideo(props: Props) {\n  const { peer } = props;\n  const stream = streamMap.get(peer.sid);\n\n  return (\n    <GridVideo\n      audioDisabled={!peer.audioEnabled}\n      loading={peer.status !== \"connected\"}\n      name={peer.name}\n      stream={stream}\n      videoDisabled={!peer.videoEnabled}\n    />\n  );\n}\n","import React from \"react\";\nimport { useRecoilValue } from \"recoil\";\nimport { useResizeDetector } from \"react-resize-detector\";\nimport { peersState } from \"../../atoms/peers\";\nimport LocalVideo from \"./local-video\";\nimport PeerVideo from \"./peer-video\";\nimport classNames from \"classnames\";\n\nfunction chunk<T>(array: T[], chunkSize: number): T[][] {\n  const chunks: T[][] = [];\n  let i = 0;\n\n  while (i < array.length) {\n    chunks.push(array.slice(i, (i += chunkSize)));\n  }\n\n  return chunks;\n}\n\nexport default function Grid() {\n  const peers = useRecoilValue(peersState);\n\n  const { width, height, ref } = useResizeDetector();\n\n  const videos = React.useMemo<React.ReactElement[]>(() => {\n    return [\n      <LocalVideo key=\"local\" />,\n      ...peers.map((peer) => <PeerVideo key={peer.sid} peer={peer} />),\n    ];\n  }, [peers]);\n\n  const isPortrait = (width ?? 0) < (height ?? 0);\n  const total = videos.length;\n  const x = Math.floor(Math.sqrt(total));\n  const y = Math.ceil(total / x);\n  const cols = isPortrait ? x : y;\n  const rows = isPortrait ? y : x;\n\n  const videosRows = React.useMemo(() => {\n    return chunk(videos, isPortrait ? rows : cols);\n  }, [cols, isPortrait, videos, rows]);\n\n  const { cellWidth, cellHeight } = React.useMemo(() => {\n    const padding = window.innerWidth < 640 ? 4 : 8;\n\n    let cellWidth = (width ?? 0) / cols;\n    let cellHeight = (height ?? 0) / rows;\n\n    if (cellWidth / 4 > cellHeight / 3) {\n      cellWidth = 4 * (cellHeight / 3);\n    }\n\n    if (cellHeight > cellWidth) {\n      cellHeight = cellWidth;\n    }\n\n    return {\n      cellWidth: cellWidth - (padding * rows - padding),\n      cellHeight: cellHeight - (padding * rows - padding),\n    };\n  }, [cols, height, rows, width]);\n\n  const columnClassName = classNames(\n    \"flex items-center justify-center w-full h-full\",\n    {\n      \"flex-col\": !isPortrait,\n      \"flex-row\": isPortrait,\n    }\n  );\n\n  const rowClassName = classNames(\"flex\", {\n    \"flex-row pb-2 sm:pb-4 last:pb-0 last:sm:pb-0\": !isPortrait,\n    \"flex-col pr-2 sm:pr-4 last:pr-0 last:sm:pb-0\": isPortrait,\n  });\n\n  const videoClassName = classNames(\"inline-block\", {\n    \"pr-2 sm:pr-4 last:pr-0 last:sm:pr-0\": !isPortrait,\n    \"pb-2 sm:pb-4 last:pb-0 last:sm:pb-0\": isPortrait,\n  });\n\n  return (\n    <div className=\"w-full h-full basis-full\">\n      <div ref={ref} className={columnClassName}>\n        {videosRows.map((videosRow, index) => (\n          <div key={`row-${index}`} className={rowClassName}>\n            {videosRow.map((video, index) => (\n              <div\n                key={`video-${index}`}\n                className={videoClassName}\n                style={{ width: cellWidth, height: cellHeight }}\n              >\n                {video}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Controls from \"./controls\";\nimport Grid from \"./grid\";\n\nexport default function Call() {\n  return (\n    <div className=\"w-full h-full flex flex-col p-2 sm:p-4 pb-0 sm:pb-0\">\n      <Grid />\n      <Controls />\n    </div>\n  );\n}\n","import React from \"react\";\nimport { useRecoilState, useSetRecoilState } from \"recoil\";\nimport { useRouter } from \"next/router\";\nimport { validateRoom } from \"../../lib/rooms/room-encoding\";\nimport { createSocket, Socket } from \"../../lib/mesh/websocket\";\nimport { defaultLocalState, localState } from \"../../atoms/local\";\nimport { defaultPeersState, peersState } from \"../../atoms/peers\";\nimport { defaultRoomState, roomActions, roomState } from \"../../atoms/room\";\nimport RequestName from \"../../components/room/request-name\";\nimport RequestPermission from \"../../components/room/request-permission\";\nimport RequestDevices from \"../../components/room/request-devices\";\nimport Loading from \"../../components/room/loading\";\nimport Call from \"../../components/room/call\";\nimport {\n  rtcDataChannelMap,\n  rtcPeerConnectionMap,\n  streamMap,\n} from \"../../lib/mesh/maps\";\n\nexport default function Room() {\n  const router = useRouter();\n\n  const [local, setLocal] = useRecoilState(localState);\n  const setPeers = useSetRecoilState(peersState);\n  const [room, setRoom] = useRecoilState(roomState);\n  const socketRef = React.useRef<Socket>();\n\n  // Parse and validate room from url\n  React.useEffect(() => {\n    (async () => {\n      if (!router.isReady) {\n        return;\n      }\n\n      const roomCode = router.query.roomCode as string;\n      const roomName = router.query.roomName as string;\n\n      try {\n        validateRoom(roomCode, roomName);\n      } catch (err) {\n        setRoom(roomActions.setError);\n        return;\n      }\n\n      setRoom(roomActions.setReady(roomName));\n    })();\n  }, [router, setRoom]);\n\n  // Clean up on unmount, which only happens on navigating to another page\n  React.useEffect(() => {\n    return () => {\n      // Reset app state\n      setPeers(defaultPeersState);\n      setRoom(defaultRoomState);\n      setLocal(defaultLocalState);\n\n      if (socketRef.current !== undefined) {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        socketRef.current.disconnect();\n      }\n\n      streamMap.forEach((stream, key) => {\n        stream?.getTracks().forEach((track) => {\n          track.stop();\n        });\n        streamMap.delete(key);\n      });\n\n      rtcDataChannelMap.forEach((channel, sid) => {\n        channel.close();\n        rtcDataChannelMap.delete(sid);\n      });\n\n      rtcPeerConnectionMap.forEach((rtcPeerConnection, sid) => {\n        rtcPeerConnection.close();\n        rtcPeerConnectionMap.delete(sid);\n      });\n    };\n  }, [setLocal, setPeers, setRoom]);\n\n  React.useEffect(() => {\n    (async () => {\n      if (local.status === \"connecting\") {\n        const roomCode = router.query.roomCode as string;\n        createSocket(roomCode, local, socketRef, setLocal, setPeers);\n      }\n    })();\n  }, [local, router.query.roomCode, setLocal, setPeers]);\n\n  return (\n    <div className=\"h-full w-full max-h-full max-w-full overflow-hidden\">\n      {room.status === \"loading\" && <Loading />}\n      {room.status === \"error\" && <p>{room.error}</p>}\n      {room.status === \"ready\" && (\n        <>\n          {local.status === \"requestingName\" && <RequestName />}\n          {local.status === \"requestingPermissions\" && <RequestPermission />}\n          {local.status === \"requestingDevices\" && <RequestDevices />}\n          {local.status === \"connecting\" && <Loading />}\n          {local.status === \"connected\" && <Call />}\n        </>\n      )}\n    </div>\n  );\n}\n"],"names":["window","__NEXT_P","push","Button","props","color","icon","fill","square","text","rest","className","classNames","button","type","span","Input","borderless","handleChange","id","placeholder","value","_handleChange","React","e","target","input","onChange","getRoomHash","key","roomName","shorthash","createRoomCode","Date","toString","slice","validateRoom","roomCode","substr","Error","console","error","randomRoomName","Math","random","defaultPeersState","peersState","atom","default","peersActions","sid","peers","status","audioEnabled","videoEnabled","undefined","find","peer","warn","filter","debug","map","name","LocalStreamKey","defaultLocalState","localState","localActions","local","assert","localStorage","setItem","rtcPeerConnectionMap","Map","rtcDataChannelMap","streamMap","mapGet","v","get","stopStream","stream","getTracks","forEach","track","stop","getMediaStream","constraints","navigator","mediaDevices","getUserMedia","getDevices","devices","audio","selectedAudio","video","selectedVideo","enumerateDevices","mediaDevice","label","device","deviceId","kind","toLowerCase","includes","createLocalStream","audioDeviceId","videoDeviceId","getVideoAudioEnabled","videoTracks","getVideoTracks","audioTracks","getAudioTracks","length","enabled","sendMessage","channel","message","send","JSON","stringify","registerDataChannel","setPeers","onopen","onmessage","event","parse","data","onPeerState","set","iceServers","urls","createRtcPeerConnection","socket","creator","rtcPeerConnection","RTCPeerConnection","addTrack","ontrack","streams","onicecandidate","candidate","iceConnectionState","emit","sdpMLineIndex","createDataChannel","ondatachannel","onConnected","setLocal","onPeerConnect","offerSdp","createOffer","setLocalDescription","onPeerDisconnect","close","rtcDataChannel","onWebRtcOffer","answerSdp","setRemoteDescription","RTCSessionDescription","createAnswer","onWebRtcAnswer","webRtcAnswer","onWebRtcIceCandidate","webRtcIceCandidate","addIceCandidate","RTCIceCandidate","createSocket","socketRef","process","env","NEXT_PUBLIC_SIGNALLING_URL","io","current","on","defaultRoomState","roomState","roomActions","Label","htmlFor","Submit","PreForm","body","handleSubmit","submitText","_handleSubmit","preventDefault","form","onSubmit","div","RequestName","useSetRecoilState","getItem","setName","submitName","required","RequestPermission","requestPermissions","Select","selectedOption","fallback","options","setValue","disabled","buttonClassName","Listbox","SelectorIcon","width","height","option","active","selected","optionClassName","CheckIcon","Video","videoDisabled","hidden","ref","srcObject","tabIndex","autoPlay","muted","LocalPreview","RequestDevices","setDevices","joinRoom","handleDeviceChange","cb","handleAudioChange","handleVideoChange","MicrophoneIcon","VideoCameraIcon","Loading","Loader","Control","children","textClassName","Controls","router","useRouter","useRecoilState","useRecoilValue","handleLeave","query","handleToggleAudio","handleToggleVideo","videoIconClassName","audioIconClassName","onClick","PhoneIcon","Status","audioDisabled","GridVideo","loading","LocalVideo","PeerVideo","Grid","useResizeDetector","videos","isPortrait","total","x","floor","sqrt","y","ceil","cols","rows","videosRows","array","chunkSize","chunks","i","chunk","padding","innerWidth","cellWidth","cellHeight","columnClassName","rowClassName","videoClassName","videosRow","index","style","Call","Room","room","setRoom","isReady","disconnect","p"],"sourceRoot":""}